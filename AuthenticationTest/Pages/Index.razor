@page "/"
@using Npgsql
@using System.Data
@using AuthenticationTest.Areas.Identity
@using AuthenticationTest.Data
@using AuthenticationTest.Data.Entities
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@inject IDAOFetcher _daoFetcher
@inject AuthenticationStateProvider auth
@inject Company TheCompany

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?"/>

@code
{
    protected override async Task OnInitializedAsync()
    {
        ifAuthenticated();
    }

    private void ifAuthenticated()
    {
        // We check if the user is logged in
        bool isAuthenticated = auth.GetAuthenticationStateAsync().Result.User.Identity.IsAuthenticated;

        if (isAuthenticated)
        {
            // We check if company details are tied to user
            bool isTied = _daoFetcher.CompanyDao().userTiedToCompany(auth.GetAuthenticationStateAsync().Result.User.Identity.Name);
        
            Console.WriteLine("Name: " + auth.GetAuthenticationStateAsync().Result.User.Identity.Name);

            TheCompany.id = _daoFetcher.CompanyDao().getCompanyForUserById(auth.GetAuthenticationStateAsync().Result.User.Identity.Name).id;
            
            Console.WriteLine("Company id: " + TheCompany.id);

            testTourFetcher();

    // If not tied, redirect to page where they can create company and tie it to user
        }
    }

    public void testTourFetcher()
    {
        List<Tour> tours = _daoFetcher.TourDao().getTours();
        Console.WriteLine("Total tours: " + tours.Count);
        foreach (Tour tour in tours)
        {
            Console.WriteLine("Tour ID: " + tour.Id);
            Console.WriteLine("Tour variants: " + tour.Variants.Count);
            Console.WriteLine("Sights: " + tour.Sights.Count);
            Console.WriteLine("Sight 1 variants: " + tour.Sights[0].Variants.Count);
        }
        
    }

}